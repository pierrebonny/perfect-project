{"version":3,"file":"main-es2015.js","mappings":"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":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/hook/hook.component.ts","./src/app/components/hook/hook.component.html","./src/app/components/list-button/list-button.component.ts","./src/app/components/list-button/list-button.component.html","./src/app/components/list-buttons/list-buttons.component.ts","./src/app/components/list-buttons/list-buttons.component.html","./src/app/components/main-page-layout/main-page-layout.component.ts","./src/app/components/main-page-layout/main-page-layout.component.html","./src/app/components/media-details-dialog/media-details-dialog.component.ts","./src/app/components/media-details-dialog/media-details-dialog.component.html","./src/app/components/media-grid/media-grid.component.ts","./src/app/components/media-grid/media-grid.component.html","./src/app/components/media-type-selection/media-type-selection.component.ts","./src/app/components/media-type-selection/media-type-selection.component.html","./src/app/components/media/media.component.ts","./src/app/components/media/media.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/pagination/pagination.component.ts","./src/app/components/pagination/pagination.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/modules/home-page/home-page-component/home-page.component.ts","./src/app/modules/home-page/home-page-component/home-page.component.html","./src/app/modules/home-page/home-page-routing.module.ts","./src/app/modules/home-page/home-page.module.ts","./src/app/modules/main-layout/main-layout.module.ts","./src/app/modules/media-research-page/media-research-page-component/media-research-page.component.ts","./src/app/modules/media-research-page/media-research-page-component/media-research-page.component.html","./src/app/modules/media-research-page/media-research-page-routing.module.ts","./src/app/modules/media-research-page/media-research-page.module.ts","./src/app/modules/media-type-selection/media-type-selection.module.ts","./src/app/modules/user-list/user-list-component/user-list-page.component.ts","./src/app/modules/user-list/user-list-component/user-list-page.component.html","./src/app/modules/user-list/user-list-routing.module.ts","./src/app/modules/user-list/user-list.module.ts","./src/app/pipes/tmdb-date/tmdb-date.pipe.ts","./src/app/pipes/tmdb-img-path/tmdb-img-path.pipe.ts","./src/app/services/localstorage/localStorage.service.ts","./src/app/services/tmdb/tmdb.service.ts","./src/environments/environment.ts","./src/main.ts","/home/pierre/Documents/perfect-project/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/topTrendingMedias', pathMatch: 'full' },\n  { path: 'userList', loadChildren: () => import('./modules/user-list/user-list.module').then(m => m.UserListModule) },\n  { path: 'topTrendingMedias', loadChildren: () => import('./modules/home-page/home-page.module').then(m => m.HomePageModule) },\n  {\n    path: 'mediaResearch',\n    loadChildren: () => import('./modules/media-research-page/media-research-page.module').then(m => m.MediaResearchPageModule),\n  },\n  { path: '**', redirectTo: 'topTrendingMedias' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'perfect-project';\n}\n","<ng-container>\n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>\n</ng-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport {\n  MatTabsModule,\n} from '@angular/material/tabs';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserListModule } from './modules/user-list/user-list.module';\nimport { HomePageModule } from './modules/home-page/home-page.module';\nimport { MediaResearchPageModule } from './modules/media-research-page/media-research-page.module';\nimport * as Sentry from \"@sentry/angular-ivy\";\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { Router } from '@angular/router';\n\nSentry.init({\n  dsn: \"https://efbab6022aa575e103a01fcb9754b3c2@o28215.ingest.sentry.io/4505639759052800\",\n  integrations: [\n    // Registers and configures the Tracing integration,\n    // which automatically instruments your application to monitor its\n    // performance, including custom Angular routing instrumentation\n    new Sentry.BrowserTracing({\n      routingInstrumentation: Sentry.routingInstrumentation,\n    }),\n  ],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n\n  // Set `tracePropagationTargets` to control for which URLs distributed tracing should be enabled\n  tracePropagationTargets: [\"localhost\", /^https:\\/\\/pierrebonny.github.io\\/perfect-project/],\n});\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    UserListModule,\n    HomePageModule,\n    MatTabsModule,\n    MediaResearchPageModule,\n  ],\n  providers: [\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => () => {},\n      deps: [Sentry.TraceService],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { Media, MediaBestCredits } from 'src/app/types';\nimport { TmdbService } from 'src/app/services/tmdb/tmdb.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-hook',\n  templateUrl: './hook.component.html',\n  styleUrls: ['./hook.component.scss']\n})\n\nexport class HookComponent implements OnChanges {\n\n  @Input () topMedia: Media;\n  @Input () mediaType: string;\n\n  public currentMedia$: Observable<Media>;\n  public currentMediaCredits$: Observable<MediaBestCredits>;\n\n  constructor(private tmdbService: TmdbService) {}\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!changes.topMedia) {\n      return;\n    }\n\n    this.updateComponent();\n  }\n\n  public updateComponent() {\n    this.currentMedia$ = this.tmdbService.getMediaById(this.topMedia.id, this.mediaType);\n    this.currentMediaCredits$ = this.tmdbService.getMediaBestCredits(this.topMedia.id, this.mediaType);\n  }\n\n}\n","<div class=\"hook\">\n<ng-container *ngIf=\"currentMedia$ | async as currentMedia\">\n  <ng-container *ngIf=\"currentMediaCredits$ | async as currentMediaCredits\">\n      <img class=\"hook__backdrop\" *ngIf=\"currentMedia.backdrop_path\" [src]=\"currentMedia.backdrop_path | tmdbImgPath\">\n      <div class=\"hook__media-view\">\n        <div *ngIf=\"mediaType === 'movie'; else tvLabel\" class=\"hook__media-type\" i18n=\"@@hook.movies\">MOVIES</div>\n        <ng-template #tvLabel>\n          <div class=\"hook__media-type\" i18n=\"@@hook.tv\">TV SHOWS</div>\n        </ng-template>\n        <h1 class=\"hook__title\">{{ (currentMedia.title ? currentMedia.title : currentMedia.name).toUpperCase() }}<p class=\"hook__popularity\">{{ currentMedia.vote_average }}</p></h1>\n        <p class=\"hook__overview\">{{ currentMedia.overview }}</p>\n        <div class=\"hook__release-date\">\n          <span class=\"hook__info-label\" i18n=\"@@hook.release-date\">Released on:</span>\n          {{ (currentMedia.release_date ? currentMedia.release_date : currentMedia.first_air_date)| tmdbDate:'YYYY' }}\n        </div>\n        <div class=\"hook__duration\">\n          <span class=\"hook__info-label\" i18n=\"@@hook.duration\">Duration:</span>\n          {{ currentMedia.runtime ? currentMedia.runtime : currentMedia.episode_run_time }} minutes\n        </div>\n        <div class=\"hook__director-name\">\n          <span class=\"hook__info-label\" i18n=\"@@hook.directorName\" *ngIf=\"currentMediaCredits.directorName\">Directed by:</span>\n          {{ currentMediaCredits.directorName }}\n        </div>\n\n        <div class=\"hook__cast\">\n          <span class=\"hook__info-label\" i18n=\"@@hook.with\">With:</span>\n          <ng-container *ngIf=\"currentMediaCredits.actorsNames as actorsNames\">\n            <span class=\"hook__actor\" *ngFor=\"let actorName of actorsNames; let last = last\">{{ actorName }}<ng-container *ngIf=\"!last\">, </ng-container></span>\n          </ng-container>\n        </div>\n      </div>\n      <ng-container *ngIf=\"currentMedia\">\n        <app-list-buttons class=\"hook__actions\" [mediaType]=\"mediaType\" [currentMedia]=\"currentMedia\"></app-list-buttons>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-list-button',\n  templateUrl: './list-button.component.html',\n  styleUrls: ['./list-button.component.scss']\n})\nexport class ListButtonComponent {\n\n  @Input () label: string;\n  @Input () listName: string;\n  @Input () mediaId: string;\n  @Input () isSelected: boolean;\n\n  @Output() buttonClicked = new EventEmitter<string>();\n\n  constructor() { }\n\n  public onButtonClick($event) {\n    $event.stopPropagation();\n    this.buttonClicked.emit(this.listName);\n  }\n\n}\n","<div class=\"list-button__list-item\">\n  <button\n    type=\"button\"\n    (click)=\"onButtonClick($event)\"\n    [ngClass]=\"listName\"\n    [class]=\"'list-button__button ' + 'list-button__button--' + (isSelected ? 'already-added' : 'not-added')\"\n    >{{ label }}\n  </button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Media } from '../../types';\nimport { LocalStorageService } from 'src/app/services/localstorage/localStorage.service';\nimport { Observable, merge, of, EMPTY } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list-buttons',\n  templateUrl: './list-buttons.component.html',\n  styleUrls: ['./list-buttons.component.scss']\n})\nexport class ListButtonsComponent implements OnInit {\n\n  @Input () currentMedia: Media;\n  @Input () mediaType: string;\n\n  public seen$: Observable<boolean>;\n  public mustSee$: Observable<boolean>;\n\n  constructor(private localStorageService: LocalStorageService) {}\n\n  ngOnInit() {\n    // Setting buttons state depending on localstorage lists\n    this.seen$ = merge(\n      of(this.localStorageService.isInList('seen', this.currentMedia.id)),\n      this.localStorageService.localStorageNotifier.pipe(\n        switchMap((value: { id: number, listName: string, isAdding: boolean }) => {\n          return this.updateButtonsState('seen', value);\n        })\n      )\n    );\n    this.mustSee$ = merge(\n      of(this.localStorageService.isInList('mustSee', this.currentMedia.id)),\n      this.localStorageService.localStorageNotifier.pipe(\n        switchMap((value: { id: number, listName: string, isAdding: boolean }) => {\n          return this.updateButtonsState('mustSee', value);\n        })\n      )\n    );\n  }\n\n  private updateButtonsState(buttonListName: string, event: { id: number, listName: string, isAdding: boolean }): Observable<boolean> {\n    if (event.id !== this.currentMedia.id || event.listName !== buttonListName) {\n      return EMPTY;\n    }\n    return of(event.isAdding);\n  }\n\n\n  /**\n   * Adding or removing current media id to selected list into localstorage\n   * Changing other button state if needed\n   */\n  public updateList(type: string) {\n    // updating button status\n    this[type] = !this[type];\n    // getting list from local storage\n    let list = this.localStorageService.getList(type);\n    const otherType = type === 'seen' ? 'mustSee' : 'seen';\n    if (!list) {\n      list = [];\n    }\n    if (list.find(media => media.id === this.currentMedia.id) !== undefined) {\n      this.localStorageService.removeItem(type, this.currentMedia);\n      return;\n    } else {\n      this.currentMedia.media_type = this.mediaType;\n      this.localStorageService.addItem(type, this.currentMedia);\n      this[otherType] = false;\n      this.localStorageService.removeItem(otherType, this.currentMedia);\n    }\n  }\n}\n","<div class=\"list-buttons__buttons\">\n  <app-list-button\n  class=\"list-buttons__button-component\"\n  i18n-label=\"@@list-buttons.ever-seen\"\n  label=\"Ever seen\"\n  listName=\"seen\"\n  [mediaId]=\"currentMedia.id\"\n  (buttonClicked)=\"updateList($event)\"\n  [isSelected]=\"seen$ | async\"\n  ></app-list-button>\n<app-list-button\n  class=\"list-buttons__button-component\"\n  i18n-label=\"@@list-buttons.to-see\"\n  label=\"To see\"\n  listName=\"mustSee\"\n  (buttonClicked)=\"updateList($event)\"\n  [mediaId]=\"currentMedia.id\"\n  [isSelected]=\"mustSee$ | async\"\n></app-list-button>\n</div>\n","import { Component, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { Media } from 'src/app/types';\nimport { PaginationComponent } from 'src/app/components/pagination/pagination.component';\n\n@Component({\n  selector: 'app-main-page-layout',\n  templateUrl: './main-page-layout.component.html',\n  styleUrls: ['./main-page-layout.component.scss']\n})\nexport class MainPageLayoutComponent {\n\n  @ViewChild('paginator') paginator: PaginationComponent;\n\n  @Input () mediasList: Media[];\n  @Input () totalPages: number;\n  @Input () mediasType: string;\n  @Input () additionalClass: string;\n\n  @Output() pageChanged = new EventEmitter<number>();\n\n  constructor() {}\n\n  public changePage(pageIndex: number) {\n    this.pageChanged.emit(pageIndex);\n  }\n\n  public reset() {\n    this.paginator.reset();\n  }\n\n}\n","<div class=\"layout\">\n    <ng-content select=\"[media-type-selection]\">\n    </ng-content>\n    <ng-content select=\"[search-bar]\">\n    </ng-content>\n    <ng-content select=\"[hook]\">\n    </ng-content>\n    <div class=\"layout__medias-list\" [ngClass]=\"additionalClass\">\n      <ng-content select=\"[results-count]\">\n      </ng-content>\n      <ng-container *ngIf=\"mediasList\">\n        <app-media-grid\n          *ngIf=\"mediasList && mediasList.length\"\n          [mediasList]=\"mediasList\"\n          [mediasType]=\"this.mediasType\"\n          ></app-media-grid>\n      </ng-container>\n      <app-pagination #paginator [totalPages]=\"totalPages\" [currentPageIndex]=\"1\" (pageChanged)=\"changePage($event)\"></app-pagination>\n    </div>\n</div>\n","import { Observable } from 'rxjs';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Media, MediaBestCredits } from '../../types';\nimport { TmdbService } from '../../services/tmdb/tmdb.service';\n\n@Component({\n  selector: 'app-media-details-dialog',\n  templateUrl: './media-details-dialog.component.html',\n  styleUrls: ['./media-details-dialog.component.scss']\n})\nexport class MediaDetailsDialogComponent {\n\n  public mediaDetails$: Observable<Media>;\n  public mediaType: string;\n  public mediaBestCredits$: Observable<MediaBestCredits>;\n\n  constructor(\n\n    private tmdbService: TmdbService,\n    private dialogRef: MatDialogRef<MediaDetailsDialogComponent>,\n\n    @Inject(MAT_DIALOG_DATA)\n    data: {\n      mediaType: string;\n      mediaId: number;\n    }) {\n\n    // getting media details from previous component (media component)\n    const mediaId = data.mediaId;\n    this.mediaType = data.mediaType;\n\n    /**\n     * Recovering important cast and crew from TMDB\n     */\n    this.mediaBestCredits$ = this.tmdbService.getMediaBestCredits(mediaId, this.mediaType);\n    // getting media 10 best actors and director's name\n    this.mediaDetails$ = this.tmdbService.getMediaById(mediaId, this.mediaType);\n  }\n\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"media-details\" *ngIf=\"mediaDetails$ | async as mediaDetails\">\n  <img *ngIf=\"mediaDetails.backdrop_path\" class=\"media-details__backdrop\" [src]=\"mediaDetails.backdrop_path | tmdbImgPath\">\n  <img\n    class=\"media-details__poster\"\n    *ngIf=\"mediaDetails.poster_path else warningTemplate\"\n    [src]=\"mediaDetails.poster_path | tmdbImgPath\"\n    alt=\"Media poster\"\n  >\n  <ng-template #warningTemplate>\n      <div class=\"media-details__poster-placeholder\">\n        <img class=\"media-details__poster-placeholder-img\" src=\"./../../../assets/Icon-emptyposter.svg\">\n      </div>\n    </ng-template>\n  <div class=\"media-details__infos\">\n      <div *ngIf=\"mediaType === 'movie'; else tvLabel\" class=\"media-details__type\" i18n=\"@@media-details.movies\">MOVIES</div>\n      <ng-template #tvLabel>\n          <div class=\"media-details__type\" i18n=\"@@media-details.tv\">TV SHOWS</div>\n      </ng-template>\n    <h1 class=\"media-details__title\">{{ (mediaDetails.title ? mediaDetails.title : mediaDetails.name).toUpperCase() }}<p *ngIf=\"mediaDetails.vote_average\" class=\"media-details__popularity\">{{ mediaDetails.vote_average }}</p></h1>\n    <div class=\"media-details__release-date\"><strong i18n=\"@@media-details.release-date\">Released on:</strong> {{ (mediaDetails.release_date ? mediaDetails.release_date : mediaDetails.first_air_date) | tmdbDate:'YYYY' }}</div>\n    <div class=\"media-details__duration\"><strong i18n=\"@@media-details.duration\">Duration:</strong> {{ mediaDetails.runtime ? mediaDetails.runtime : mediaDetails.episode_run_time }} minutes</div>\n    <ng-container *ngIf=\"mediaBestCredits$ | async as mediaBestCredits\">\n      <div class=\"media-details__director-name\" *ngIf=\"mediaBestCredits.directorName\">\n        <span class=\"media-details__info-label\" i18n=\"@@hook.directorName\" >Directed by:</span>\n        {{ mediaBestCredits.directorName }}\n      </div>\n      <div class=\"media-details__cast\">\n        <span class=\"media-details__info-label\" i18n=\"@@hook.with\">With:</span>\n        <ng-container *ngIf=\"mediaBestCredits.actorsNames as actorsNames\">\n          <span class=\"media-details__actor\" *ngFor=\"let actorName of actorsNames; let last = last\">{{ actorName }}<ng-container *ngIf=\"!last\">, </ng-container></span>\n        </ng-container>\n      </div>\n    </ng-container>\n    <p class=\"media-details__overview\" *ngIf=\"mediaDetails.overview\">{{ mediaDetails.overview }}</p>\n    <app-list-buttons class=\"media-details__buttons\" [mediaType]=\"mediaType\" [currentMedia]=\"this.mediaDetails\"></app-list-buttons>\n  </div>\n  <mat-icon class=\"media-details__close-icon\" (click)=\"closeDialog()\">close</mat-icon>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Media } from '../../types';\n\n@Component({\n  selector: 'app-media-grid',\n  templateUrl: './media-grid.component.html',\n  styleUrls: ['./media-grid.component.scss']\n})\nexport class MediaGridComponent {\n\n  @Input () mediasList: Array<Media>;\n  @Input () mediasType: string;\n\n}\n","<mat-grid-list gutterSize=\"21px\" cols=\"3\" rowHeight=\"310px\">\n  <mat-grid-tile *ngFor=\"let media of mediasList\">\n    <mat-card class=\"media-grid__card\">\n      <app-media class=\"media-grid__media\" [currentMedia]=\"media\" [mediaType]=\"mediasType\">\n      </app-media>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-media-type-selection',\n  templateUrl: './media-type-selection.component.html',\n  styleUrls: ['./media-type-selection.component.css']\n})\n\nexport class MediaTypeSelectionComponent {\n\n  @Output() mediaChanged = new EventEmitter<string>();\n\n  public mediasType = 'movie';\n\n  @Input () additionalClass: string;\n\n  constructor() { }\n\n  public mediaChange(type: string ) {\n    this.mediaChanged.emit(type);\n    this.mediasType = type;\n    // TODO this.reset();\n  }\n}\n","<div class=\"media-type-selection\" [ngClass]=\"additionalClass\">\n  <button\n    class=\"media-type-selection__button\"\n    [ngClass]=\"mediasType === 'movie' ? 'on' : ''\"\n    (click)=\"mediaChange('movie')\"\n    i18n=\"@@main-page-layout.movies\"\n  >Movies</button>\n  <button\n    class=\"media-type-selection__button\"\n    [ngClass]=\"mediasType === 'tv' ? 'on' : ''\"\n    (click)=\"mediaChange('tv')\"\n    i18n=\"@@main-page-layout.tv\"\n  >TV Shows</button>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Media } from '../../types';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MediaDetailsDialogComponent } from '../media-details-dialog/media-details-dialog.component';\nimport { TmdbService } from '../../services/tmdb/tmdb.service';\n\n@Component({\n  selector: 'app-media',\n  templateUrl: './media.component.html',\n  styleUrls: ['./media.component.scss']\n})\nexport class MediaComponent {\n\n  @Input () currentMedia: Media;\n  @Input () mediaType: string;\n\n  constructor(private dialog: MatDialog, private  tmdbService: TmdbService) {}\n\n  /**\n   * open new dialog with media cast, crew and overview\n   */\n  public openDetailsDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '80%';\n    dialogConfig.data = {\n      mediaType: this.mediaType,\n      mediaId: this.currentMedia.id,\n    };\n    this.dialog.open(MediaDetailsDialogComponent, dialogConfig);\n  }\n}\n","<p class=\"media__vote\">{{currentMedia.vote_average ? currentMedia.vote_average : ''}}</p>\n<img class=\"media__poster\" *ngIf=\"currentMedia.poster_path; else warningTemplate\" [src]=\"currentMedia.poster_path | tmdbImgPath\" alt=\"Media poster\">\n<ng-template #warningTemplate>\n  <div class=\"media__poster-placeholder\">\n    <img class=\"media__poster-placeholder-img\" src=\"./../../../assets/Icon-emptyposter.svg\">\n  </div>\n</ng-template>\n<div class=\"media__infos\">\n    <div *ngIf=\"mediaType === 'movie'; else tvLabel\" class=\"media__type\" i18n=\"@@media.movies\">MOVIES</div>\n    <ng-template #tvLabel>\n        <div class=\"media__type\" i18n=\"@@media.tv\">TV SHOWS</div>\n    </ng-template>\n  <h2 class=\"media__title\">{{ (currentMedia.title ? currentMedia.title : currentMedia.name).toUpperCase() }}</h2>\n  <p class=\"media__release-date\"><strong i18n=\"@@media.release-date\">Released on</strong> {{ (currentMedia.release_date ? currentMedia.release_date : currentMedia.first_air_date) | tmdbDate:'YYYY' }}</p>\n  <div class=\"media__overview\" *ngIf=\"currentMedia.overview\">{{currentMedia.overview}}</div>\n  <a class=\"media__details-link\" (click)=\"openDetailsDialog()\" i18n=\"@@media.details-link\">See more</a>\n  <app-list-buttons class=\"media__buttons\" [mediaType]=\"mediaType\" [currentMedia]=\"currentMedia\"></app-list-buttons>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n\n  private avalaibleRoutes = ['topTrendingMedias', 'mediaResearch', 'userList/seenMedias', 'userList/mustSeeMedias'];\n\n  public currentTabIndex: number;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    switch (window.location.pathname) {\n      case '/mediaResearch':\n        this.currentTabIndex = 1;\n        break;\n      case '/userList/seenMedias':\n        this.currentTabIndex = 2;\n        break;\n      case '/userList/mustSeeMedias':\n        this.currentTabIndex = 3;\n        break;\n      default:\n        this.currentTabIndex = 0;\n      }\n  }\n\n  public changePage(event: MatTabChangeEvent) {\n    this.router.navigate([this.avalaibleRoutes[event.index]]);\n  }\n\n}\n","<div class=\"navbar\">\n  <h2 class=\"navbar__title\">PERFECTRENDS</h2>\n  <mat-tab-group [selectedIndex]=\"currentTabIndex\" (selectedTabChange)=\"changePage($event)\">\n    <mat-tab label=\"Top Trending\" i18n-label=\"@@navbar.top-trending\"></mat-tab>\n    <mat-tab label=\"Search\" i18n-label=\"@@navbar.search\"></mat-tab>\n    <mat-tab label=\"Ever seen\" i18n-label=\"@@navbar.ever-seen\"></mat-tab>\n    <mat-tab label=\"To see\" i18n-label=\"@@navbar.to-see\"></mat-tab>\n  </mat-tab-group>\n</div>\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnChanges {\n\n  @Input () totalPages: number;\n  @Input () currentPageIndex: number;\n\n  @Output () pageChanged = new EventEmitter<number>();\n\n  private pagesIndex: number[];\n  public displayedPagesIndex: number[];\n\n  constructor() {}\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!changes.totalPages) {\n      return;\n    }\n    if (changes.pageIndex && this.currentPageIndex < 0) {\n      this.currentPageIndex = 0;\n    }\n    this.totalPages = changes.totalPages.currentValue;\n    this.pagesIndex = new Array(this.totalPages).fill(1).map((x, i) => i + 1);\n    this.displayedPagesIndex = this.pagesIndex.slice(1, Math.min(6, this.pagesIndex.length - 1));\n  }\n\n  public changePage(pageIndex: number) {\n    if (!(0 < pageIndex && pageIndex <= this.totalPages)) {\n      return;\n    }\n    this.currentPageIndex = pageIndex;\n    this.computeDisplayedPagesIndex();\n    this.pageChanged.emit(pageIndex);\n  }\n\n  private computeDisplayedPagesIndex() {\n    if (this.currentPageIndex <= 6) {\n      this.displayedPagesIndex = this.pagesIndex.slice(1, Math.min(6, this.pagesIndex.length - 1));\n    } else {\n      const lastIndexToDisplay = this.currentPageIndex === this.totalPages ? this.currentPageIndex - 1 : this.currentPageIndex;\n      this.displayedPagesIndex = this.pagesIndex.slice(this.currentPageIndex - 6, lastIndexToDisplay);\n    }\n  }\n\n  public reset() {\n    this.currentPageIndex = 1;\n  }\n\n}\n","<div *ngIf=\"totalPages > 1\" class=\"pagination\">\n  <div class=\"pagination__arrow left\" (click)=\"changePage(currentPageIndex - 1)\"></div>\n  <div [class]=\"'pagination__page ' + (currentPageIndex === 1 ? 'active' : '')\" (click)=\"changePage(1)\">1</div>\n  <div *ngIf=\"totalPages > 2 && currentPageIndex > 6\" class=\"pagination__three-points\">...</div>\n  <ng-container *ngIf=\"totalPages > 2\">\n      <div\n      *ngFor=\"let pageIndex of displayedPagesIndex\"\n      [class]=\"'pagination__page ' + (pageIndex === currentPageIndex ? 'active' : '')\"\n      (click)=\"changePage(pageIndex)\">\n      {{ pageIndex }}\n    </div>\n  </ng-container>\n  <div *ngIf=\"totalPages > 6 && currentPageIndex < totalPages - 1\" class=\"pagination__three-points\">...</div>\n  <div *ngIf=\"totalPages > 1\" [class]=\"'pagination__page ' + (currentPageIndex === totalPages ? 'active' : '')\" (click)=\"changePage(totalPages)\">{{ totalPages }}</div>\n  <div class=\"pagination__arrow right\" (click)=\"changePage(currentPageIndex + 1)\"></div>\n</div>\n","import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent {\n\n  public research: string;\n\n  @Output () researchUpdated = new EventEmitter<string>();\n\n  public onResearchUpdate($event) {\n    this.researchUpdated.emit($event);\n  }\n\n\n}\n","<div search-bar color=\"primary\" class=\"media-research-page__search-bar\">\n  <input\n  class=\"media-research-page__input\"\n  matInput\n  placeholder=\"Search by title\"\n  i18n-placeholder=\"@@media-research.research-placeHolder\"\n  [(ngModel)]=\"research\"\n  type=\"text\"\n  autocomplete=\"off\"\n  name=\"research\"\n  id=\"research\"\n  (ngModelChange)=\"this.onResearchUpdate($event)\"\n  onfocus=\"this.placeholder = ''\"\n  onblur=\"this.placeholder = 'Search by title'\"\n  >\n  <mat-icon class=\"media-research-page__search-icon\" matSuffix>search</mat-icon>\n</div>\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { switchMap, map, startWith, shareReplay } from 'rxjs/operators';\nimport { Media } from 'src/app/types';\nimport { Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { TmdbService } from 'src/app/services/tmdb/tmdb.service';\nimport { MainPageLayoutComponent } from 'src/app/components/main-page-layout/main-page-layout.component';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\n\nexport class HomePageComponent implements AfterViewInit {\n\n  @ViewChild(MainPageLayoutComponent) layoutComponent: MainPageLayoutComponent;\n\n  public mediasList$: Observable<Media[]>;\n\n  private currentPage = 1;\n  public totalPages = 0;\n  public hookMedia: Media;\n\n  private changePage$ = new Subject<number>();\n  public changeType$ = new BehaviorSubject<string>('movie');\n\n  constructor(private tmdbService: TmdbService) {}\n\n  public ngAfterViewInit() {\n    this.mediasList$ = this.changeType$\n      .pipe(\n        switchMap((type) => {\n          if (this.layoutComponent) { this.layoutComponent.reset(); }\n          return this.updateMediasListPage(type);\n        }),\n        shareReplay(1)\n      );\n    this.getTrendingMedias(1, 'movie');\n  }\n\n  /**\n   * on click on paginator get next or previous page from TMDB\n   */\n  public changePage(currentPageIndex: number) {\n    this.currentPage = currentPageIndex;\n    this.changePage$.next(currentPageIndex);\n  }\n\n  public changeType(type: string) {\n    this.currentPage = 1;\n    this.changeType$.next(type);\n    this.layoutComponent.reset();\n  }\n\n  public getCurrentPage() {\n    return this.currentPage;\n  }\n\n  public updateMediasListPage(type: string): Observable<Media[]> {\n    return this.changePage$\n      .pipe(\n        startWith(1),\n        switchMap((currentPage) => this.getTrendingMedias(currentPage, type))\n      );\n  }\n\n  /**\n   * getting trending medias list by type and page\n   */\n  private getTrendingMedias(currentPage: number, type: string): Observable<Media[]> {\n    return this.tmdbService.getTrendingMedias(type, currentPage)\n      .pipe(\n        map(medias => {\n          this.totalPages = medias.total_pages;\n          if (currentPage === 1) {\n            this.hookMedia = medias.results[0];\n          }\n          return medias.results;\n        })\n      );\n  }\n}\n","<ng-container *ngIf=\"mediasList$ | async as mediasList\">\n    <app-main-page-layout\n      class=\"home-page__main-page-layout\"\n      [mediasList]=\"mediasList\"\n      (pageChanged)=\"changePage($event)\"\n      [totalPages]=\"totalPages\"\n      [mediasType]=\"this.changeType$ | async\"\n      additionalClass=\"\">\n      <ng-container hook>\n          <app-hook  [mediaType]=\"this.changeType$ | async\" [topMedia]=\"hookMedia\"></app-hook>\n      </ng-container>\n      <ng-container media-type-selection>\n        <app-media-type-selection additionalClass=\"\" (mediaChanged)=\"changeType($event)\">\n        </app-media-type-selection>\n      </ng-container>\n    </app-main-page-layout>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePageComponent } from './home-page-component/home-page.component';\n\nconst routes: Routes = [{ path: '', component: HomePageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomePageRoutingModule } from './home-page-routing.module';\nimport { MediaTypeSelectionModule } from '../media-type-selection/media-type-selection.module';\nimport { MainLayoutModule } from '../main-layout/main-layout.module';\nimport { HomePageComponent } from './home-page-component/home-page.component';\nimport { HookComponent } from '../../components/hook/hook.component';\n\n\n@NgModule({\n  declarations: [\n    HomePageComponent,\n    HookComponent,\n  ],\n  imports: [\n    CommonModule,\n    HomePageRoutingModule,\n    MediaTypeSelectionModule,\n    MainLayoutModule,\n  ]\n})\nexport class HomePageModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MediaComponent } from '../../components/media/media.component';\nimport { MediaDetailsDialogComponent } from '../../components/media-details-dialog/media-details-dialog.component';\nimport { ListButtonsComponent } from '../../components/list-buttons/list-buttons.component';\nimport { MediaGridComponent } from '../../components/media-grid/media-grid.component';\nimport { TmdbDatePipe } from '../../pipes/tmdb-date/tmdb-date.pipe';\nimport { TmdbImgPathPipe } from '../../pipes/tmdb-img-path/tmdb-img-path.pipe';\nimport { MainPageLayoutComponent } from '../../components/main-page-layout/main-page-layout.component';\nimport { ListButtonComponent } from '../../components/list-button/list-button.component';\nimport { PaginationComponent } from '../../components/pagination/pagination.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n\n\n@NgModule({\n  declarations: [\n    MediaComponent,\n    MediaDetailsDialogComponent,\n    ListButtonsComponent,\n    MediaGridComponent,\n    TmdbDatePipe,\n    TmdbImgPathPipe,\n    MainPageLayoutComponent,\n    ListButtonComponent,\n    PaginationComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatListModule,\n    MatGridListModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  exports: [\n    MediaComponent,\n    MediaDetailsDialogComponent,\n    ListButtonsComponent,\n    MediaGridComponent,\n    TmdbDatePipe,\n    TmdbImgPathPipe,\n    MainPageLayoutComponent,\n    ListButtonComponent,\n    PaginationComponent,\n  ],\n  entryComponents: [ MediaDetailsDialogComponent ]\n})\nexport class MainLayoutModule { }\n","import { Subject, Observable, of, combineLatest, BehaviorSubject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, map, startWith, tap } from 'rxjs/operators';\nimport { Media } from 'src/app/types';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { TmdbService } from 'src/app/services/tmdb/tmdb.service';\nimport { MainPageLayoutComponent } from 'src/app/components/main-page-layout/main-page-layout.component';\n\n@Component({\n  selector: 'app-media-research-page',\n  templateUrl: './media-research-page.component.html',\n  styleUrls: ['./media-research-page.component.scss']\n})\n\nexport class MediaResearchPageComponent implements OnInit {\n\n  @ViewChild(MainPageLayoutComponent) layoutComponent: MainPageLayoutComponent;\n\n  // research bar model\n  public mediaResearchUpdate = new Subject<string>();\n\n  private mediaResearch: string;\n\n  public mediasList$: Observable<Media[]>;\n\n  private currentPage = 1;\n  public totalPages: number;\n  public totalResults: number;\n\n  private changePage$ = new Subject<number>();\n  public changeType$ = new BehaviorSubject<string>('movie');\n\n  constructor(private tmdbService: TmdbService) {}\n\n  public ngOnInit() {\n    this.mediasList$ = combineLatest([\n        this.mediaResearchUpdate.pipe(\n          debounceTime(500),\n          distinctUntilChanged(),\n          tap((mediaResearch) => {\n            this.mediaResearch = mediaResearch;\n          })\n        ),\n        this.changeType$,\n      ]).pipe(\n        switchMap(([_, type]) => {\n          this.layoutComponent.reset();\n          return this.updateMediasListPage(type);\n        }),\n      );\n  }\n\n  /**\n   * on click on paginator get next or previous page from TMDB\n   */\n  public changePage(currentPageIndex: number) {\n    this.currentPage = currentPageIndex;\n    this.changePage$.next(currentPageIndex);\n  }\n\n  public changeType(type: string) {\n    this.currentPage = 1;\n    this.changeType$.next(type);\n  }\n\n  public getCurrentPage() {\n    return this.currentPage;\n  }\n\n  public updateMediasListPage(type: string): Observable<Media[]> {\n    return this.changePage$\n      .pipe(\n        startWith(1),\n        switchMap((currentPage) => this.filterMediasByUserEntry(currentPage, type))\n      );\n  }\n\n  /**\n   * filtering all current page medias by keeping only ones starting by user entry string\n   */\n  private filterMediasByUserEntry(currentPage: number, type: string): Observable<Media[]> {\n    if (!(this.mediaResearch && this.mediaResearch.length)) {\n      this.totalPages = 0;\n      this.totalResults = 0;\n      return of([]);\n    }\n\n    return this.tmdbService.getMediasByName(this.mediaResearch, type, currentPage)\n      .pipe(\n        map(medias => {\n          this.totalPages = medias.total_pages;\n          this.totalResults = medias.total_results;\n          return medias.results;\n        })\n      );\n  }\n}\n","<app-main-page-layout\n  [mediasList]=\"mediasList$ | async\"\n  (pageChanged)=\"changePage($event)\"\n  [totalPages]=\"totalPages\"\n  [mediasType]=\"this.changeType$ | async\"\n  additionalClass=\"margin\">\n  <ng-container media-type-selection>\n    <app-media-type-selection additionalClass=\"margin\" (mediaChanged)=\"changeType($event)\">\n    </app-media-type-selection>\n  </ng-container>\n  <ng-container search-bar>\n    <app-search-bar (researchUpdated)=\"this.mediaResearchUpdate.next($event)\"></app-search-bar>\n  </ng-container>\n  <div results-count class=\"results-count\">\n    <span class=\"results-count__count\">\n      {{ totalResults ? totalResults : 0 }}\n    </span>\n    <span *ngIf=\"totalResults && totalResults > 1 else result\" i18n=\"@@media-research.results\">results</span>\n    <ng-template #result>\n      <span i18n=\"@@media-research.result\">result</span>\n    </ng-template>\n  </div>\n</app-main-page-layout>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MediaResearchPageComponent } from './media-research-page-component/media-research-page.component';\n\nconst routes: Routes = [{ path: '', component: MediaResearchPageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MediaResearchPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MediaResearchPageRoutingModule } from './media-research-page-routing.module';\nimport { MediaResearchPageComponent } from './media-research-page-component/media-research-page.component';\nimport { MainLayoutModule } from '../main-layout/main-layout.module';\nimport { MediaTypeSelectionModule } from '../media-type-selection/media-type-selection.module';\nimport { SearchBarComponent } from '../../components/search-bar/search-bar.component';\n\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    MediaResearchPageComponent,\n    SearchBarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MediaResearchPageRoutingModule,\n    MediaTypeSelectionModule,\n    MainLayoutModule,\n    MatIconModule,\n    FormsModule,\n  ]\n})\nexport class MediaResearchPageModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaTypeSelectionComponent } from '../../components/media-type-selection/media-type-selection.component';\n\n@NgModule({\n  declarations: [ MediaTypeSelectionComponent, ],\n  imports: [\n    CommonModule\n  ],\n  exports: [ MediaTypeSelectionComponent, ],\n})\nexport class MediaTypeSelectionModule { }\n","import { Subject, BehaviorSubject, Observable, combineLatest, merge, of } from 'rxjs';\nimport { pluck, tap, map, startWith, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { Media } from 'src/app/types';\nimport { Component, ViewChild } from '@angular/core';\nimport { LocalStorageService } from 'src/app/services/localstorage/localStorage.service';\nimport { MainPageLayoutComponent } from 'src/app/components/main-page-layout/main-page-layout.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-list-page',\n  templateUrl: './user-list-page.component.html',\n  styleUrls: ['./user-list-page.component.scss']\n})\n\nexport class UserListPageComponent {\n\n  @ViewChild(MainPageLayoutComponent) layoutComponent: MainPageLayoutComponent;\n\n  private mediasList$: Observable<Media[]>;\n  public currentMediasList$: Observable<Media[]>;\n\n  private currentPage = 1;\n  public totalPages = 0;\n  public currentListName: string;\n\n  // change this var to extend pages\n  private readonly pagesSize = 20;\n\n  private changePage$ = new Subject<number>();\n  public changeType$ = new BehaviorSubject<string>('movie');\n\n  constructor(private localStorageService: LocalStorageService, private route: ActivatedRoute) {\n\n    const listName$ = this.route.data.pipe(\n      pluck('listName'),\n      distinctUntilChanged(),\n      tap(listName => this.currentListName = listName),\n    );\n\n    const listChange$ = this.localStorageService.localStorageNotifier.pipe(\n      pluck('listName'),\n      filter(listName => listName === this.currentListName)\n    );\n\n    const mediaChange$ = merge(listName$, listChange$);\n\n    this.mediasList$ = combineLatest([this.changeType$, mediaChange$]).pipe(\n      map(([type]) => this.localStorageService.getListAndFilterByMediaType(this.currentListName, type))\n    );\n\n    this.currentMediasList$ = combineLatest([\n      this.changePage$.pipe(startWith(1)),\n      this.mediasList$,\n    ]).pipe(\n        map(([page, mediasList]) => {\n          this.totalPages = Math.trunc(mediasList.length / this.pagesSize)  + ((mediasList.length % this.pagesSize) > 0 ? 1 : 0);\n          return mediasList.slice(\n            (page - 1) * this.pagesSize,\n            Math.min(((page - 1) * this.pagesSize) + this.pagesSize, mediasList.length)\n          );\n        }),\n      );\n  }\n\n  /**\n   * on click on paginator get next or previous page from TMDB\n   */\n  public changePage(currentPageIndex: number) {\n    this.currentPage = currentPageIndex;\n    this.changePage$.next(currentPageIndex);\n  }\n\n  public changeType(type: string) {\n    this.currentPage = 1;\n    this.changeType$.next(type);\n  }\n\n  public getCurrentPage() {\n    return this.currentPage;\n  }\n}\n","<app-main-page-layout\n  *ngIf=\"currentMediasList$ | async as mediasList\"\n  [mediasList]=\"mediasList\"\n  (mediaChanged)=\"changeType($event)\"\n  (pageChanged)=\"changePage($event)\"\n  [totalPages]=\"totalPages\"\n  additionalClass=\"margin\">\n  <ng-container media-type-selection>\n    <app-media-type-selection additionalClass=\"margin\" (mediaChanged)=\"changeType($event)\">\n    </app-media-type-selection>\n  </ng-container>\n  <div results-count class=\"results-count\">\n    <span class=\"results-count__count\">\n      {{ mediasList ? mediasList.length : 0 }}\n    </span>\n    <ng-container *ngIf=\"(this.changeType$ | async) as mediaType\">\n      <div *ngIf=\"mediasList.length > 1; else result\">\n        <span class=\"user-list__media-type\" *ngIf=\"mediaType === 'movie'; else tvs\" i18n=\"@@user-list.movies\">movies</span>\n        <ng-template #tvs>\n          <span class=\"user-list__media-type\" i18n=\"@@user-list.tvs\">TV Shows</span>\n        </ng-template>\n        <span *ngIf=\"currentListName && currentListName === 'seen';else toSee\" i18n=\"@@user-list.seen1\">ever seen</span>\n        <ng-template #toSee>\n          <span i18n=\"@@user-list.toSee1\">to see</span>\n        </ng-template>\n      </div>\n      <ng-template #result>\n        <div class=\"media-research-page__results_text\">\n          <span class=\"user-list__media-type\" *ngIf=\"mediaType === 'movie'; else tv\" i18n=\"@@user-list.movie\">movie</span>\n          <ng-template #tv>\n            <span class=\"user-list__media-type\" i18n=\"@@user-list.tv\">TV Show</span>\n          </ng-template>\n          <span *ngIf=\"currentListName && currentListName === 'seen';else toSee\" i18n=\"@@user-list.seen2\">ever seen</span>\n          <ng-template #toSee>\n            <span i18n=\"@@user-list.toSee2\">to see</span>\n          </ng-template>\n        </div>\n      </ng-template>\n    </ng-container>\n  </div>\n</app-main-page-layout>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserListPageComponent } from './user-list-component/user-list-page.component';\n\nconst routes: Routes = [\n  { path: 'seenMedias', component: UserListPageComponent, data: { listName: 'seen' } },\n  { path: 'mustSeeMedias', component: UserListPageComponent, data: { listName: 'mustSee' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserListRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MediaTypeSelectionModule } from '../media-type-selection/media-type-selection.module';\nimport { MainLayoutModule } from '../main-layout/main-layout.module';\nimport { UserListRoutingModule } from './user-list-routing.module';\nimport { UserListPageComponent } from './user-list-component/user-list-page.component';\n\n\n@NgModule({\n  declarations: [\n    UserListPageComponent,\n  ],\n  imports: [\n    CommonModule,\n    UserListRoutingModule,\n    MediaTypeSelectionModule,\n    MainLayoutModule,\n  ]\n})\nexport class UserListModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n\n@Pipe({\n  name: 'tmdbDate'\n})\nexport class TmdbDatePipe implements PipeTransform {\n\n  transform(dateStr: string, format = 'YYYY'): string {\n    const momentDate = moment(dateStr);\n    return momentDate.format(format);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tmdbImgPath'\n})\nexport class TmdbImgPathPipe implements PipeTransform {\n\n  transform(imgPath: string): string {\n    return 'https://image.tmdb.org/t/p/original/' + imgPath;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Media } from 'src/app/types';\n\n/**\n * Service dedicated to communicate with the media DB API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  public localStorageNotifier = new Subject<{ id: number, listName: string, isAdding: boolean }>();\n\n  /**\n   * Getting list from localstorage\n   */\n  public getList(listName: string): Media[] {\n    if (!localStorage.getItem(listName)) {\n      return [];\n    }\n    return JSON.parse(localStorage.getItem(listName));\n  }\n\n  public getListAndFilterByMediaType(listName: string, mediaType: string): Media[] {\n    if (!mediaType) {\n      return this.getList(listName);\n    }\n    return this.getList(listName).filter(media => media.media_type === mediaType);\n  }\n\n  /**\n   * Removing current media id from localstorage list\n   */\n  public removeItem(listName: string, currentMedia: Media): void {\n    if (!localStorage.getItem(listName) || !currentMedia) {\n      return;\n    }\n    const list = this.getList(listName);\n    const index = list.findIndex(media => (media.media_type === currentMedia.media_type && media.id === currentMedia.id));\n    if (index >= 0) {\n      list.splice(index, 1);\n    }\n    localStorage.setItem(listName, JSON.stringify(list));\n    this.localStorageNotifier.next({id: currentMedia.id, listName, isAdding: false});\n  }\n\n  /**\n   * Looking for current media id in localstorage list\n   */\n  public isInList(listName: string, mediaId: number): boolean {\n    if (!localStorage.getItem(listName) || !mediaId) {\n      return false;\n    }\n    const list = this.getList(listName);\n    return list && list.find(media => media.id === mediaId) !== undefined;\n  }\n\n  /**\n   * Adding current media id from localstorage list\n   */\n  public addItem(listName: string, media: Media): void {\n    if (!media) {\n      return;\n    }\n    const list = this.getList(listName);\n    list.push(media);\n    localStorage.setItem(listName, JSON.stringify(list));\n    this.localStorageNotifier.next({id: media.id, listName, isAdding: true});\n  }\n\n}\n","import { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { APIResult, Media, MediaCredits, MediaBestCredits } from '../../types';\nimport { of, Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators'\n\n/**\n * Service dedicated to communicate with the media DB API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TmdbService {\n\n  baseURL = 'https://api.themoviedb.org/3';\n  apiKey = '0c6e72279935d4050e3042008b14802c';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Recovering weekly trending movies from TMDB to display home screen list\n   */\n  public getTrendingMedias(mediaType: string, currentPage: number = 1): Observable<APIResult> {\n    if (!mediaType) {\n      return of({\n        page: 0,\n        results: [],\n        total_pages: 0,\n        total_results: 0,\n      });\n    }\n\n    return this.http\n      .get<APIResult>(`${this.baseURL}/trending/${mediaType}/week?api_key=${this.apiKey}&page=${currentPage}`)\n      .pipe(\n        retry(2),\n        catchError(this.handleHttpError)\n      );\n  }\n\n  /**\n   * Get media details from TMDB thanks to media ID\n   */\n  public getMediaById(id: number, mediaType: string): Observable<Media> {\n    if (!id || !mediaType) {\n      return of({});\n    }\n    return this.http.get<Media>(`${this.baseURL}/${mediaType}/${id}?api_key=${this.apiKey}`);\n  }\n\n  /**\n   * Get media director and 10 best actors names\n   */\n  public getMediaBestCredits(id: number, mediaType: string): Observable<MediaBestCredits> {\n    if (!id || !mediaType) {\n      return of({});\n    }\n    return this.http.get<MediaCredits>(`${this.baseURL}/${mediaType}/${id}/credits?api_key=${this.apiKey}`)\n      .pipe(\n        map((mediaCredits: MediaCredits) => {\n          return this.parseMediaCredits(mediaCredits);\n        })\n      );\n  }\n\n  /**\n   * Find any media by it's name\n   */\n  public getMediasByName(mediaName: string, mediaType: string, page: number = 1): Observable<APIResult> {\n    if (!mediaName || !mediaType) {\n      return of({\n        page: 0,\n        results: [],\n        total_pages: 0,\n        total_results: 0,\n      });\n    }\n    return this.http.get<APIResult>(\n      `${this.baseURL}/search/${mediaType}?api_key=${this.apiKey}&page=${page}&include_adult=false&query=${mediaName}`\n    ).pipe(\n      retry(2),\n      catchError(this.handleHttpError)\n    );\n  }\n\n\n  private parseMediaCredits(mediaCredits: MediaCredits): MediaBestCredits {\n    const result: MediaBestCredits = {};\n    // filtering all crew to get media director\n    if (mediaCredits.crew) {\n      const director = mediaCredits.crew.find(crewMember => crewMember.job === 'Director');\n\n      if (director) {\n        result.directorName = director.name;\n      }\n    }\n\n    if (mediaCredits.cast) {\n      result.actorsNames = mediaCredits.cast\n      .slice(0, Math.min(10, mediaCredits.cast.length)) // getting up to 10 actors\n      .map(actorName => actorName.name); // getting actors names only\n    }\n    return result;\n  }\n\n  private handleHttpError(error: HttpErrorResponse): Observable<APIResult> {\n    return of({\n      page: 0,\n      results: [],\n      total_pages: 0,\n      total_results: 0,\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 62275,\n\t\"./af.js\": 62275,\n\t\"./ar\": 90857,\n\t\"./ar-dz\": 11218,\n\t\"./ar-dz.js\": 11218,\n\t\"./ar-kw\": 14754,\n\t\"./ar-kw.js\": 14754,\n\t\"./ar-ly\": 66680,\n\t\"./ar-ly.js\": 66680,\n\t\"./ar-ma\": 92178,\n\t\"./ar-ma.js\": 92178,\n\t\"./ar-sa\": 56522,\n\t\"./ar-sa.js\": 56522,\n\t\"./ar-tn\": 95682,\n\t\"./ar-tn.js\": 95682,\n\t\"./ar.js\": 90857,\n\t\"./az\": 70164,\n\t\"./az.js\": 70164,\n\t\"./be\": 79774,\n\t\"./be.js\": 79774,\n\t\"./bg\": 60947,\n\t\"./bg.js\": 60947,\n\t\"./bm\": 21832,\n\t\"./bm.js\": 21832,\n\t\"./bn\": 89650,\n\t\"./bn-bd\": 74477,\n\t\"./bn-bd.js\": 74477,\n\t\"./bn.js\": 89650,\n\t\"./bo\": 66005,\n\t\"./bo.js\": 66005,\n\t\"./br\": 98492,\n\t\"./br.js\": 98492,\n\t\"./bs\": 70534,\n\t\"./bs.js\": 70534,\n\t\"./ca\": 52061,\n\t\"./ca.js\": 52061,\n\t\"./cs\": 84737,\n\t\"./cs.js\": 84737,\n\t\"./cv\": 61167,\n\t\"./cv.js\": 61167,\n\t\"./cy\": 77996,\n\t\"./cy.js\": 77996,\n\t\"./da\": 9528,\n\t\"./da.js\": 9528,\n\t\"./de\": 14540,\n\t\"./de-at\": 49430,\n\t\"./de-at.js\": 49430,\n\t\"./de-ch\": 67978,\n\t\"./de-ch.js\": 67978,\n\t\"./de.js\": 14540,\n\t\"./dv\": 83426,\n\t\"./dv.js\": 83426,\n\t\"./el\": 6616,\n\t\"./el.js\": 6616,\n\t\"./en-au\": 63816,\n\t\"./en-au.js\": 63816,\n\t\"./en-ca\": 32162,\n\t\"./en-ca.js\": 32162,\n\t\"./en-gb\": 83305,\n\t\"./en-gb.js\": 83305,\n\t\"./en-ie\": 61954,\n\t\"./en-ie.js\": 61954,\n\t\"./en-il\": 43060,\n\t\"./en-il.js\": 43060,\n\t\"./en-in\": 59923,\n\t\"./en-in.js\": 59923,\n\t\"./en-nz\": 13540,\n\t\"./en-nz.js\": 13540,\n\t\"./en-sg\": 16505,\n\t\"./en-sg.js\": 16505,\n\t\"./eo\": 41907,\n\t\"./eo.js\": 41907,\n\t\"./es\": 86640,\n\t\"./es-do\": 41246,\n\t\"./es-do.js\": 41246,\n\t\"./es-mx\": 56131,\n\t\"./es-mx.js\": 56131,\n\t\"./es-us\": 36430,\n\t\"./es-us.js\": 36430,\n\t\"./es.js\": 86640,\n\t\"./et\": 62551,\n\t\"./et.js\": 62551,\n\t\"./eu\": 32711,\n\t\"./eu.js\": 32711,\n\t\"./fa\": 54572,\n\t\"./fa.js\": 54572,\n\t\"./fi\": 33390,\n\t\"./fi.js\": 33390,\n\t\"./fil\": 87860,\n\t\"./fil.js\": 87860,\n\t\"./fo\": 48216,\n\t\"./fo.js\": 48216,\n\t\"./fr\": 99291,\n\t\"./fr-ca\": 98527,\n\t\"./fr-ca.js\": 98527,\n\t\"./fr-ch\": 58407,\n\t\"./fr-ch.js\": 58407,\n\t\"./fr.js\": 99291,\n\t\"./fy\": 47054,\n\t\"./fy.js\": 47054,\n\t\"./ga\": 49540,\n\t\"./ga.js\": 49540,\n\t\"./gd\": 73917,\n\t\"./gd.js\": 73917,\n\t\"./gl\": 51486,\n\t\"./gl.js\": 51486,\n\t\"./gom-deva\": 56245,\n\t\"./gom-deva.js\": 56245,\n\t\"./gom-latn\": 48868,\n\t\"./gom-latn.js\": 48868,\n\t\"./gu\": 59652,\n\t\"./gu.js\": 59652,\n\t\"./he\": 89019,\n\t\"./he.js\": 89019,\n\t\"./hi\": 42040,\n\t\"./hi.js\": 42040,\n\t\"./hr\": 63402,\n\t\"./hr.js\": 63402,\n\t\"./hu\": 79322,\n\t\"./hu.js\": 79322,\n\t\"./hy-am\": 27609,\n\t\"./hy-am.js\": 27609,\n\t\"./id\": 57942,\n\t\"./id.js\": 57942,\n\t\"./is\": 98275,\n\t\"./is.js\": 98275,\n\t\"./it\": 73053,\n\t\"./it-ch\": 4378,\n\t\"./it-ch.js\": 4378,\n\t\"./it.js\": 73053,\n\t\"./ja\": 46176,\n\t\"./ja.js\": 46176,\n\t\"./jv\": 679,\n\t\"./jv.js\": 679,\n\t\"./ka\": 92726,\n\t\"./ka.js\": 92726,\n\t\"./kk\": 72953,\n\t\"./kk.js\": 72953,\n\t\"./km\": 86957,\n\t\"./km.js\": 86957,\n\t\"./kn\": 59181,\n\t\"./kn.js\": 59181,\n\t\"./ko\": 47148,\n\t\"./ko.js\": 47148,\n\t\"./ku\": 27752,\n\t\"./ku.js\": 27752,\n\t\"./ky\": 65675,\n\t\"./ky.js\": 65675,\n\t\"./lb\": 41263,\n\t\"./lb.js\": 41263,\n\t\"./lo\": 65746,\n\t\"./lo.js\": 65746,\n\t\"./lt\": 11143,\n\t\"./lt.js\": 11143,\n\t\"./lv\": 38753,\n\t\"./lv.js\": 38753,\n\t\"./me\": 44054,\n\t\"./me.js\": 44054,\n\t\"./mi\": 31573,\n\t\"./mi.js\": 31573,\n\t\"./mk\": 30202,\n\t\"./mk.js\": 30202,\n\t\"./ml\": 68523,\n\t\"./ml.js\": 68523,\n\t\"./mn\": 79794,\n\t\"./mn.js\": 79794,\n\t\"./mr\": 56681,\n\t\"./mr.js\": 56681,\n\t\"./ms\": 56975,\n\t\"./ms-my\": 39859,\n\t\"./ms-my.js\": 39859,\n\t\"./ms.js\": 56975,\n\t\"./mt\": 3691,\n\t\"./mt.js\": 3691,\n\t\"./my\": 5152,\n\t\"./my.js\": 5152,\n\t\"./nb\": 7607,\n\t\"./nb.js\": 7607,\n\t\"./ne\": 21526,\n\t\"./ne.js\": 21526,\n\t\"./nl\": 86368,\n\t\"./nl-be\": 40076,\n\t\"./nl-be.js\": 40076,\n\t\"./nl.js\": 86368,\n\t\"./nn\": 68420,\n\t\"./nn.js\": 68420,\n\t\"./oc-lnc\": 51906,\n\t\"./oc-lnc.js\": 51906,\n\t\"./pa-in\": 94504,\n\t\"./pa-in.js\": 94504,\n\t\"./pl\": 54721,\n\t\"./pl.js\": 54721,\n\t\"./pt\": 74645,\n\t\"./pt-br\": 54548,\n\t\"./pt-br.js\": 54548,\n\t\"./pt.js\": 74645,\n\t\"./ro\": 71977,\n\t\"./ro.js\": 71977,\n\t\"./ru\": 26042,\n\t\"./ru.js\": 26042,\n\t\"./sd\": 78849,\n\t\"./sd.js\": 78849,\n\t\"./se\": 27739,\n\t\"./se.js\": 27739,\n\t\"./si\": 50084,\n\t\"./si.js\": 50084,\n\t\"./sk\": 92449,\n\t\"./sk.js\": 92449,\n\t\"./sl\": 23086,\n\t\"./sl.js\": 23086,\n\t\"./sq\": 33139,\n\t\"./sq.js\": 33139,\n\t\"./sr\": 30607,\n\t\"./sr-cyrl\": 30063,\n\t\"./sr-cyrl.js\": 30063,\n\t\"./sr.js\": 30607,\n\t\"./ss\": 40131,\n\t\"./ss.js\": 40131,\n\t\"./sv\": 21665,\n\t\"./sv.js\": 21665,\n\t\"./sw\": 5642,\n\t\"./sw.js\": 5642,\n\t\"./ta\": 33622,\n\t\"./ta.js\": 33622,\n\t\"./te\": 74825,\n\t\"./te.js\": 74825,\n\t\"./tet\": 48336,\n\t\"./tet.js\": 48336,\n\t\"./tg\": 39238,\n\t\"./tg.js\": 39238,\n\t\"./th\": 99463,\n\t\"./th.js\": 99463,\n\t\"./tk\": 39986,\n\t\"./tk.js\": 39986,\n\t\"./tl-ph\": 29672,\n\t\"./tl-ph.js\": 29672,\n\t\"./tlh\": 40043,\n\t\"./tlh.js\": 40043,\n\t\"./tr\": 51212,\n\t\"./tr.js\": 51212,\n\t\"./tzl\": 50110,\n\t\"./tzl.js\": 50110,\n\t\"./tzm\": 80482,\n\t\"./tzm-latn\": 38309,\n\t\"./tzm-latn.js\": 38309,\n\t\"./tzm.js\": 80482,\n\t\"./ug-cn\": 42495,\n\t\"./ug-cn.js\": 42495,\n\t\"./uk\": 54157,\n\t\"./uk.js\": 54157,\n\t\"./ur\": 80984,\n\t\"./ur.js\": 80984,\n\t\"./uz\": 64141,\n\t\"./uz-latn\": 43662,\n\t\"./uz-latn.js\": 43662,\n\t\"./uz.js\": 64141,\n\t\"./vi\": 12607,\n\t\"./vi.js\": 12607,\n\t\"./x-pseudo\": 66460,\n\t\"./x-pseudo.js\": 66460,\n\t\"./yo\": 92948,\n\t\"./yo.js\": 92948,\n\t\"./zh-cn\": 62658,\n\t\"./zh-cn.js\": 62658,\n\t\"./zh-hk\": 39352,\n\t\"./zh-hk.js\": 39352,\n\t\"./zh-mo\": 38274,\n\t\"./zh-mo.js\": 38274,\n\t\"./zh-tw\": 98451,\n\t\"./zh-tw.js\": 98451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":[],"sourceRoot":"webpack:///"}